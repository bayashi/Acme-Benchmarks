#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 3.008
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1590275409',
        'name' => 'list.tt',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;

    eval { BLOCK: {
$output .=  'List:
';
#line 6 "/home/bayashi/perl-modules/Acme-Benchmarks/workdir/template/list.tt"

# FOREACH
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('data');

    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n";
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'item'} = $_tt_value;
$output .=  '    * ';
#line 3 "/home/bayashi/perl-modules/Acme-Benchmarks/workdir/template/list.tt"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['item', 0, 'title', 0]);

    &$_tt_filter($output);
};

$output .=  '
    * ';
#line 4 "/home/bayashi/perl-modules/Acme-Benchmarks/workdir/template/list.tt"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['item', 0, 'title', 0]);

    &$_tt_filter($output);
};

$output .=  '
    * ';
#line 5 "/home/bayashi/perl-modules/Acme-Benchmarks/workdir/template/list.tt"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['item', 0, 'title', 0]);

    &$_tt_filter($output);
};

$output .=  '
';;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
